{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","fruit","id","name","email","CardList","console","log","fruits","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredFruits","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAEO,SAASA,EAAKC,GACjB,OACI,sBAAKC,UAAY,iBAAjB,UACI,qBAAKC,IAAM,UAAUC,IAAG,+BAA4BH,EAAMI,MAAMC,GAAxC,4BACxB,mCAAML,EAAMI,MAAME,KAAlB,OACA,kCAAKN,EAAMI,MAAMG,YCHtB,IAAMC,EAAW,SAAAR,GAEpB,OADAS,QAAQC,IAAIV,GACL,qBAAKC,UAAY,YAAjB,SAECD,EAAMW,OAAOC,KAAI,SAAAR,GAAK,OAAI,cAACL,EAAD,CAAuBK,MAASA,GAAnBA,EAAMC,U,MCLlD,SAASQ,EAAT,GAAiD,IAA7BC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,aACpC,OACI,8BACI,uBACId,UAAY,SACZe,KAAO,SACPF,YAAeA,EACfG,SAAWF,M,ICkCZG,E,kDAtCb,aAAc,IAAD,8BACX,gBAeFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAdrC,EAAKC,MAAQ,CACXb,OAAQ,GACRU,YAAa,IALJ,E,qDASb,WAAoB,IAAD,OAEjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,OAAQkB,S,oBAOxC,WACE,MAA8BC,KAAKN,MAA5Bb,EAAP,EAAOA,OAAQU,EAAf,EAAeA,YACTU,EAAiBpB,EAAOqB,QAAO,SAAA5B,GAAK,OACxCA,EAAME,KAAK2B,cAAcC,SAASb,EAAYY,kBAEhD,OACE,sBAAKhC,UAAU,MAAf,UACE,kDACA,cAACY,EAAD,CACEC,YAAc,kBACdC,aAAgBe,KAAKf,eAEvB,cAAC,EAAD,CAAUJ,OAAUoB,W,GAjCVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b9bea563.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.styles.css'\r\nexport function Card(props) {\r\n    return (\r\n        <div className = 'card-container'>\r\n            <img alt = 'monster' src = {`https://robohash.org/${props.fruit.id}?set=set2&size=180x180`}/>\r\n            <h2> {props.fruit.name} </h2>\r\n            <p> {props.fruit.email}</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './card-list.styles.css'\r\nimport { Card } from '../card/card.component.jsx'\r\n\r\nexport const CardList = props => {\r\n    console.log(props)\r\n    return <div className = 'card-list'>\r\n        {\r\n            props.fruits.map(fruit => <Card key = {fruit.id} fruit = {fruit} />)\r\n          }\r\n        </div>\r\n}\r\n","import React from 'react'\r\nimport './search-box.styles.css'\r\n\r\nexport function SearchBox({placeholder, handleChange}) {\r\n    return (\r\n        <div>\r\n            <input\r\n                className = 'search'\r\n                type = 'search'\r\n                placeholder = {placeholder}\r\n                onChange= {handleChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import './App.css';\nimport { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component.jsx'\nimport { SearchBox } from './components/search-box/search-box.component.jsx'\n\nclass App extends Component{\n  constructor(){\n    super();\n\n    this.state = {\n      fruits: [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount(){\n\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({fruits: users}))\n  }\n\n  handleChange = e => {\n    this.setState({searchField: e.target.value})\n  }\n\n  render(){\n    const {fruits, searchField} = this.state;\n    const filteredFruits = fruits.filter(fruit =>\n      fruit.name.toLowerCase().includes(searchField.toLowerCase())\n      )\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder = 'search monsters'\n          handleChange = {this.handleChange}\n        />\n        <CardList fruits = {filteredFruits}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}